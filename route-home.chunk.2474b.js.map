{"version":3,"sources":["webpack:///./routes/home/index.js","webpack:///./components/new-task/index.js","webpack:///./routes/home/style.css","webpack:///./components/task-list/style.css","webpack:///./components/task-list/index.js"],"names":["Home","state","canCloseTaskCreation","isFinishedSelected","searchText","isEdit","editableIndex","task","date","isAsc","monthNames","switchStates","setState","openNewTask","editTask","index","closeNewTask","notificationMsg","alert","getFormattedDates","dates","map","dateObj","Date","monthName","getMonth","getDate","toString","length","getFullYear","initiateSearch","currentTarget","value","changeSortOrder","console","log","render","props","window","localStorage","getItem","JSON","parse","sort","a","b","formattedDates","this","class","style","home","color","type","placeholder","onchange","onclick","xmlns","width","height","viewBox","stroke","stroke-width","stroke-linecap","stroke-linejoin","fill","sortIcon","d","Component","newTask","error","description","changeValue","target","obj","createNewTask","resultObj","msg","oldData","includes","push","setItem","stringify","addDates","createTask","NaN","getTime","tasks","isFinished","filter","removeItem","errorBlock","componentDidMount","aria-label","name","id","module","exports","TaskList","getTaskArr","resTasks","getDBTasks","myTask","originalIndex","dateSection","formattedDate","dateHeading","markFinished","e","stopPropagation","DBTasks","location","reload","deleteTask","getThumbsIcon","tooltip","deleteSvg","tooltiptext","finishedSvg","getTasks","accordion","toggleSlide","overflowAnyware","points","x1","y1","x2","y2","panel","classList","toggle","active","nextElementSibling","maxHeight","scrollHeight","margin"],"mappings":"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","file":"route-home.chunk.2474b.js","sourcesContent":["import { Component } from 'preact';\nimport style from './style.css';\nimport NewTask from '../../components/new-task';\nimport TaskList from '../../components/task-list';\n\nclass Home extends Component {\n\tstate = {\n    canCloseTaskCreation: true,\n\t\tisFinishedSelected: false,\n\t\tsearchText: '',\n\t\tisEdit: false,\n\t\teditableIndex: '',\n\t\ttask: {},\n\t\tdate: '',\n\t\tisAsc: true\n  }\n\n\tmonthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\tswitchStates = (isFinishedSelected) => {\n\t\tthis.setState({ isFinishedSelected });\n\t}\n\n\topenNewTask = () => {\n\t\tthis.setState({\n\t\t\tisEdit: false,\n\t\t\tcanCloseTaskCreation: false\n\t\t})\n\t}\n\n\teditTask = ({ index, date }) => {\n\t\tthis.setState({\n\t\t\tdate,\n\t\t\teditableIndex: index,\n\t\t\tcanCloseTaskCreation: false,\n\t\t\tisEdit: true\n\t\t})\n\t}\n\n\tcloseNewTask = (notificationMsg) => {\n    this.setState({\n      canCloseTaskCreation: true\n    });\n\n\t\tif (notificationMsg) {\n\t\t\talert(notificationMsg);\n\t\t}\n  }\n\n\tgetFormattedDates = (dates) => {\n\t\treturn dates.map((date) => {\n\t\t\tlet dateObj = new Date(date);\n\t\t\tlet monthName = this.monthNames[dateObj.getMonth()];\n\t\t\treturn `${dateObj.getDate().toString().length==1?'0':''}${dateObj.getDate()} ${monthName} ${dateObj.getFullYear()}`;\n\t\t});\n\t}\n\n\tinitiateSearch = ({ currentTarget }) => {\n\t\tthis.setState({\n\t\t\tsearchText: currentTarget.value\n\t\t});\n\t}\n\n\tchangeSortOrder = (isAsc) => {\n\t\tconsole.log('kdkd', isAsc)\n\t\tthis.setState({ isAsc });\n\t}\n\n\trender(props, { isFinishedSelected, canCloseTaskCreation, searchText, isEdit, editableIndex, date, isAsc }) {\n\t\tif (typeof window !== \"undefined\") {\n\t\t\tlet { localStorage } = window;\n\t\t\tlet dates = localStorage.getItem('dates');\n\t\t\tdates = JSON.parse(dates);\n\t\t\tdates = dates || [];\n\t\t\tif\t(isAsc) {\n\t\t\t\tdates = dates.sort((a, b) => new Date(a) - new Date(b));\n\t\t\t} else {\n\t\t\t\tdates = dates.sort((a, b) => new Date(b) - new Date(a));\n\t\t\t}\n\t\t\t\n\t\t\tlet formattedDates = this.getFormattedDates(dates);\n\n\t\t\treturn  (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class={`columns ${style.home} is-align-items-center`}>\n\t\t\t\t\t\t\t<div class=\"dropdown is-hoverable column\">\n\t\t\t\t\t\t\t\t<b class=\"is-size-1\" style={{color: \"#0c1be2\"}}>LTM</b>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<input class=\"column input is-rounded is-medium is-three-quarters\" type=\"text\" placeholder=\"Search your task...\" value={searchText} onchange={this.initiateSearch} />\n\t\t\t\t\t\t\t<div class=\"column has-text-centered\">\n\t\t\t\t\t\t\t\t<button class=\"button is-link\" onclick={this.openNewTask}>New Task</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"tabs is-large is-boxed\" style=\"width: 74%; margin: 0px auto;\">\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li class={isFinishedSelected ? '' : 'is-active'} onclick={() => this.switchStates(false)}><a>Unfinished</a></li>\n\t\t\t\t\t\t\t\t<li class={isFinishedSelected ? 'is-active': ''} onclick={() => this.switchStates(true)}><a>Finished</a></li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t{isAsc ?\n\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48px\" height=\"48px\" viewBox=\"0 0 24 24\" stroke=\"#2329D6\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#2329D6\" class={`cursor-pointer ${style.sortIcon}`} onclick={() => this.changeSortOrder(false)}>\n\t\t\t\t\t\t\t\t<path d=\"M11 9H17\"/>\n\t\t\t\t\t\t\t\t<path d=\"M11 5H19\"/>\n\t\t\t\t\t\t\t\t<path d=\"M11 13H15\"/>\n\t\t\t\t\t\t\t\t<path d=\"M10 17L7 20L4 17\"/>\n\t\t\t\t\t\t\t\t<path d=\"M7 5V19\"/>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48px\" height=\"48px\" viewBox=\"0 0 24 24\" stroke=\"#2329D6\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#2329D6\" class={`cursor-pointer ${style.sortIcon}`} onclick={() => this.changeSortOrder(true)}>\n\t\t\t\t\t\t\t\t<path d=\"M11 16H17\"/>\n\t\t\t\t\t\t\t\t<path d=\"M11 20H19\"/>\n\t\t\t\t\t\t\t\t<path d=\"M11 12H15\"/>\n\t\t\t\t\t\t\t\t<path d=\"M4 8L7 5L10 8\"/>\n\t\t\t\t\t\t\t\t<path d=\"M7 20L7 6\"/>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<TaskList dates={dates} formattedDates={formattedDates} isFinishedSelected={isFinishedSelected} searchText={searchText} editTask={this.editTask} />\n\t\t\t\t\t\t{canCloseTaskCreation ? \"\" : <NewTask closeNewTask={this.closeNewTask} isEdit={isEdit} editableIndex={editableIndex} date={date} />}\n\t\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\t// componentDidMount() {\n\t// \tlet { localStorage } = window;\n\t// \tlet dates = localStorage.getItem('dates');\n\t// \tif (dates) {\n\t// \t\t// Removing outDated dates\n\t// \t\tlet todayDate = new Date();\n\t// \t\tdates = JSON.parse(dates) || [];\n\t\n\t// \t\tlet resDates = dates.filter((date) => {\n\t// \t\t\tlet dateObj = new Date(date);\n\t// \t\t\tconst diffTime = Math.abs(dateObj - todayDate);\n\t// \t\t\tconst diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\t// \t\t\treturn diffDays < 30;\n\t// \t\t});\n\t// \t\tlocalStorage.setItem('dates', JSON.stringify(resDates));\n\n\t// \t\tlet outDatedDates = dates.filter((date) => {\n\t// \t\t\tlet dateObj = new Date(date);\n\t// \t\t\tconst diffTime = Math.abs(dateObj - todayDate);\n\t// \t\t\tconst diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\t// \t\t\treturn diffDays > 30;\n\t// \t\t});\n\t// \t\toutDatedDates.forEach((date) => {\n\t// \t\t\tlocalStorage.removeItem(date);\n\t// \t\t});\n\t// \t}\n\t// }\n}\n\nexport default Home;\n","import style from './style.css';\nimport { Component } from 'preact';\n\nclass newTask extends Component {\n  state = {\n    error: '',\n    task: '',\n    description: '',\n    date: `${new Date().getFullYear()}-${(new Date().getMonth()+1).toString().length==1?'0':''}${new Date().getMonth()+1}-${new Date().getDate().toString().length==1?'0':''}${new Date().getDate()}`\n  }\n\n  changeValue = (value, target) => {\n    let obj = {}\n    obj[target] = value;\n    this.setState(obj);\n  }\n\n  createNewTask = ({ resultObj, closeNewTask, msg }) => {\n    let { state } = this;\n    let { localStorage } = window;\n    let oldData = localStorage.getItem(state.date);\n\n    if (oldData) {\n      oldData = JSON.parse(oldData);\n      let taskNames = oldData.map(({ task }) => task);\n\n      if (taskNames.includes(state.task)) {\n        this.setState({\n          error: 'Task Name already exists'\n        });\n        return;\n      }\n      oldData.push(resultObj);\n      localStorage.setItem(state.date, JSON.stringify(oldData));\n      this.addDates();\n      closeNewTask(msg || 'Your Task added successfully');\n      return;\n    }\n    localStorage.setItem(state.date, JSON.stringify([resultObj]));\n    this.addDates();\n    closeNewTask(msg || 'Your Task added successfully');\n  }\n\n  createTask = ({ closeNewTask, date, editableIndex, isEdit }) => {\n    let { state } = this;\n    this.setState({ error: '' });\n\n    if (!state.task) {\n      this.setState({\n        error: 'Kindly fill the task'\n      });\n      return;\n    }\n    if (!state.date || !new Date(state.date).getTime() === NaN) {\n      this.setState({\n        error: 'Kindly select the date'\n      });\n      return;\n    }\n\n    let resultObj = {\n      task: state.task\n    }\n\n    if (state.description) {\n      resultObj.description = state.description;\n    }\n    if (isEdit) {\n      let { localStorage } = window;\n      let tasks = localStorage.getItem(date);\n      tasks = JSON.parse(tasks) || [];\n      resultObj.isFinished = !!tasks[editableIndex].isFinished;\n\n      if (date === state.date) {\n        tasks[editableIndex] = resultObj;\n        localStorage.setItem(state.date, JSON.stringify(tasks));\n        closeNewTask('Your Task Edited successfully');\n        return;\n      }\n      delete tasks[editableIndex];\n      tasks = tasks.filter((task) => task);\n\n      if (tasks.length) {\n        localStorage.setItem(date, JSON.stringify(tasks));\n      } else {\n        localStorage.removeItem(date);\n      }\n      this.createNewTask({ resultObj, closeNewTask, msg: 'Your Task Edited successfully' });\n      return;\n    }\n    this.createNewTask({ resultObj, closeNewTask });\n  }\n\n  addDates = () => {\n    let { localStorage } = window;\n    let dates = localStorage.getItem('dates');\n    let {date} = this.state;\n\n    if (dates) {\n      dates = JSON.parse(dates);\n      if (!dates.includes(date)) {\n        dates.push(date);\n        localStorage.setItem('dates', JSON.stringify(dates));\n      }\n      return;\n    }\n    localStorage.setItem('dates', JSON.stringify([date]));\n  }\n\n  errorBlock = () => {\n    if (!this.state.error) {\n      return;\n    }\n    return (\n      <article class=\"message is-danger\">\n        <div class=\"message-body p-3\">\n          {this.state.error}\n        </div>\n      </article>\n    )\n  }\n\n  componentDidMount = () => {\n    let { date, editableIndex, isEdit }  = this.props;\n\n    if (isEdit && date){\n      let tasks = localStorage.getItem(date);\n      tasks = (JSON.parse(tasks) || []);\n      let { task, description } = tasks[editableIndex] || {};\n\n      if (task) {\n        this.setState({\n          task,\n          description,\n          date\n        });\n      }\n    }\n  }\n\n  render(props, state) {\n    let { closeNewTask, isEdit } = props;\n    return (\n      <div class=\"modal is-active\">\n        <div class=\"modal-background\"></div>\n        <div class=\"modal-card\">\n          <header class=\"modal-card-head\">\n            <p class=\"modal-card-title\">{isEdit ? 'Edit' : 'New'} Task</p>\n            <button class=\"delete\" aria-label=\"close\" onclick={() => { closeNewTask() }}></button>\n          </header>\n          <section class=\"modal-card-body\">\n            {this.errorBlock()}\n            <div class=\"field\">\n              <label class=\"label\">Task</label>\n              <div class=\"control\">\n                <input class=\"input\" type=\"text\" placeholder=\"Type your Task\" value={state.task} onchange={({ target }) => this.changeValue(target.value, 'task')} />\n              </div>\n            </div>\n            <div class=\"field\">\n              <label class=\"label\">Description</label>\n              <div class=\"control\">\n                <textarea class=\"textarea\" placeholder=\"Type your description\" value={state.description} onchange={({ target }) => this.changeValue(target.value, 'description')} />\n              </div>\n            </div>\n            <div class=\"field\">\n              <label class=\"label\">Date</label>\n              <div class=\"control\">\n                <input type=\"date\" name=\"dateofbirth\" id=\"dateofbirth\" value={state.date} onchange={({ target }) => this.changeValue(target.value, 'date')} />\n              </div>\n            </div>\n          </section>\n          <footer class=\"modal-card-foot\">\n            <button class=\"button is-link\" onclick={() => { this.createTask(props) }}>{isEdit ? 'Edit' : 'Create'}</button>\n            <button class=\"button is-link is-light is-outlined\" onclick={() => { closeNewTask() }}>Cancel</button>\n          </footer>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default newTask;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"home__MseGd\",\"notificationBanner\":\"notificationBanner__GnNPS\",\"sortIcon\":\"sortIcon__1UakV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dateHeading\":\"dateHeading__D9mbW\",\"accordion\":\"accordion__3LOg6\",\"active\":\"active__1GYBM\",\"panel\":\"panel__ZwcEE\",\"finishedSvg\":\"finishedSvg__3oOmi\",\"deleteSvg\":\"deleteSvg__3F8zA\",\"tooltip\":\"tooltip__wg2gI\",\"tooltiptext\":\"tooltiptext__2KLF9\",\"overflowAnyware\":\"overflowAnyware__p9LXI\"};","import { Component, Fragment } from 'preact';\nimport style from './style.css';\n\nclass TaskList extends Component {\n  getDBTasks(date) {\n    let { localStorage } = window;\n    let tasks = localStorage.getItem(date);\n    return (JSON.parse(tasks) || []);\n  }\n\n  getTaskArr = (date, isFinishedSelected, searchText) => {\n    let tasks = this.getDBTasks(date);\n    let resTasks = tasks.map((task, index) => {\n      let myTask = JSON.parse(JSON.stringify(task));\n      myTask.originalIndex = index;\n      return myTask;\n    });\n  \n    if  (isFinishedSelected) {\n      resTasks = resTasks.filter(({ isFinished }) => isFinished);\n    } else {\n      resTasks = resTasks.filter(({ isFinished }) => !isFinished);\n    }\n\n    if  (searchText) {\n      return resTasks.filter(({ task, description }) => task.includes(searchText) || description.includes(searchText));\n    }\n    return resTasks;\n  }\n\n  dateSection = (date, formattedDate, isFinishedSelected, searchText) => {\n      let tasks = this.getTaskArr(date, isFinishedSelected, searchText);\n      if (tasks.length) {\n        return (<h1 class={`is-size-5 ${style.dateHeading} mb-4`}>{formattedDate}</h1>);\n      }\n      return '';\n  }\n\n  markFinished = (e, { date, index, isFinishedSelected, searchText }) => {\n    e.stopPropagation();\n    let tasks = this.getTaskArr(date, isFinishedSelected, searchText);\n    let { originalIndex } = tasks[index];\n    let DBTasks = this.getDBTasks(date);\n    let { localStorage } = window;\n    DBTasks[originalIndex].isFinished = !isFinishedSelected;\n    localStorage.setItem(date, JSON.stringify(DBTasks));\n    let msg = isFinishedSelected ? 'Your Task is marked as Unfinished' : 'Your Task is marked as finished';\n    alert(msg);\n    window.location.reload();\n  }\n\n  deleteTask = (e, { date, index, isFinishedSelected }) => {\n    e.stopPropagation();\n    let tasks = this.getTaskArr(date, isFinishedSelected);\n    let { originalIndex } = tasks[index];\n    let DBTasks = this.getDBTasks(date);\n    delete DBTasks[originalIndex];\n    DBTasks = DBTasks.filter((task) => task);\n    let { localStorage } = window;\n    if (DBTasks.length) {\n      localStorage.setItem(date, JSON.stringify(DBTasks));\n    } else {\n      localStorage.removeItem(date);\n    }\n    alert('Your task is deleted Successfully');\n    window.location.reload();\n  }\n\n  editTask = (e, { date, index, isFinishedSelected, editTask }) => {\n    e.stopPropagation();\n    let tasks = this.getTaskArr(date, isFinishedSelected);\n    let { originalIndex } = tasks[index];\n    editTask({ index: originalIndex, date });\n  }\n\n  getThumbsIcon = ({ index, date, isFinishedSelected, searchText }) => {\n    if (isFinishedSelected) {\n      return (\n        <div class={style.tooltip}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" class={style.deleteSvg} stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" onclick={(e) => this.markFinished(e, { index, date, isFinishedSelected, searchText })}>\n            <path d=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"/>\n          </svg>\n          <span class={style.tooltiptext}>Mark as Unfinished</span>\n        </div>\n      )\n    }\n    return (\n      <div class={style.tooltip}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" class={`${style.finishedSvg}`} stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" onclick={(e) => this.markFinished(e, { index, date, isFinishedSelected, searchText })}>\n          <path d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"/>\n        </svg>\n        <span class={style.tooltiptext}>Mark as finished</span>\n      </div>\n    )\n  }\n\n  getTasks = (date, isFinishedSelected, searchText, editTask) => {\n    let tasks = this.getTaskArr(date, isFinishedSelected, searchText);\n\n    return tasks.map(({ task, description}, index) => {\n      return(\n        <Fragment>\n          <button class={`${style.accordion} notification is-link is-light columns is-align-items-center m-0 is-size-4`} onclick={this.toggleSlide}>\n            <div class={`column is-four-fifths p-0 ${style.overflowAnyware}`}>{task}</div>\n            <div class=\"column has-text-right p-0\">\n              {this.getThumbsIcon({ index, date, isFinishedSelected, searchText })}\n              <div class={style.tooltip}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"ml-2\" onclick={(e) => this.editTask(e, { index, date, isFinishedSelected, searchText, editTask })}>\n                  <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"/>\n                  <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"/>\n                </svg>\n                <span class={style.tooltiptext}>Edit</span>\n              </div>\n              <div class={style.tooltip}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class={`ml-2 ${style.deleteSvg}`} onclick={(e) => this.deleteTask(e, { index, date, isFinishedSelected, searchText })}>\n                  <polyline points=\"3 6 5 6 21 6\"/>\n                  <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"/>\n                  <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"/><line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"/>\n                </svg>\n                <span class={style.tooltiptext}>Delete</span>\n              </div>\n            </div>\n          </button>\n          <div class={`${style.panel}`}>{description}</div>\n        </Fragment>\n      )\n    })\n  }\n\n  toggleSlide({ currentTarget }) {\n    currentTarget.classList.toggle(style.active);\n    let { nextElementSibling: panel } = currentTarget;\n    if (panel.style.maxHeight) {\n      panel.style.maxHeight = null;\n    } else {\n      panel.style.maxHeight = `${panel.scrollHeight}px`;\n    }\n  }\n\n  render({ dates, formattedDates, isFinishedSelected, searchText, editTask }) {\n    return (\n      <div style={{width: '74%', margin: '0 auto'}}>\n        {formattedDates.map((date, index) => {\n          return (\n            <div>\n              {this.dateSection(dates[index], date, isFinishedSelected, searchText)}\n              {this.getTasks(dates[index], isFinishedSelected, searchText, editTask)}\n            </div>\n          );\n        })}\n      </div>\n    )\n  }\n}\n\nexport default TaskList;"],"sourceRoot":""}