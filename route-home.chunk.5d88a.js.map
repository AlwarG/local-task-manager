{"version":3,"sources":["webpack:///./routes/home/index.js","webpack:///./components/new-task/index.js","webpack:///./routes/home/style.css","webpack:///./components/task-list/style.css","webpack:///./components/task-list/index.js"],"names":["Home","state","canCloseTaskCreation","isFinishedSelected","searchText","isEdit","editableIndex","task","date","monthNames","switchStates","setState","openNewTask","editTask","index","closeNewTask","notificationMsg","alert","getFormattedDates","dates","map","dateObj","Date","monthName","getMonth","getDate","toString","length","getFullYear","initiateSearch","currentTarget","value","render","props","window","localStorage","getItem","this","isDirectCreate","JSON","parse","formattedDates","class","style","home","color","type","placeholder","onchange","onclick","componentDidMount","todayDate","resDates","filter","diffTime","Math","abs","ceil","setItem","stringify","forEach","removeItem","Component","newTask","error","description","changeValue","target","obj","createNewTask","resultObj","msg","oldData","includes","push","addDates","createTask","NaN","getTime","tasks","isFinished","errorBlock","componentDidUpdate","aria-label","name","id","module","exports","TaskList","getTaskArr","resTasks","getDBTasks","myTask","originalIndex","dateSection","formattedDate","dateHeading","markFinished","e","stopPropagation","DBTasks","location","reload","deleteTask","getThumbsIcon","tooltip","xmlns","width","height","viewBox","fill","stroke","deleteSvg","stroke-width","stroke-linecap","stroke-linejoin","d","tooltiptext","finishedSvg","getTasks","accordion","toggleSlide","overflowAnyware","points","x1","y1","x2","y2","panel","classList","toggle","active","nextElementSibling","maxHeight","scrollHeight","margin"],"mappings":"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","file":"route-home.chunk.5d88a.js","sourcesContent":["import { Component } from 'preact';\nimport style from './style.css';\nimport NewTask from '../../components/new-task';\nimport TaskList from '../../components/task-list';\n\nclass Home extends Component {\n\tstate = {\n    canCloseTaskCreation: true,\n\t\tisFinishedSelected: false,\n\t\tsearchText: '',\n\t\tisEdit: false,\n\t\teditableIndex: '',\n\t\ttask: {},\n\t\tdate: ''\n  }\n\n\tmonthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\tswitchStates = (isFinishedSelected) => {\n\t\tthis.setState({ isFinishedSelected });\n\t}\n\n\topenNewTask = () => {\n\t\tthis.setState({\n\t\t\tisEdit: false,\n\t\t\tcanCloseTaskCreation: false\n\t\t})\n\t}\n\n\teditTask = ({ index, date }) => {\n\t\tthis.setState({\n\t\t\tdate,\n\t\t\teditableIndex: index,\n\t\t\tcanCloseTaskCreation: false,\n\t\t\tisEdit: true\n\t\t})\n\t}\n\n\tcloseNewTask = (notificationMsg) => {\n    this.setState({\n      canCloseTaskCreation: true\n    });\n\n\t\tif (notificationMsg) {\n\t\t\talert(notificationMsg);\n\t\t}\n  }\n\n\tgetFormattedDates = (dates) => {\n\t\treturn dates.map((date) => {\n\t\t\tlet dateObj = new Date(date);\n\t\t\tlet monthName = this.monthNames[dateObj.getMonth()];\n\t\t\treturn `${dateObj.getDate().toString().length==1?'0':''}${dateObj.getDate()} ${monthName} ${dateObj.getFullYear()}`;\n\t\t});\n\t}\n\n\tinitiateSearch = ({ currentTarget }) => {\n\t\tthis.setState({\n\t\t\tsearchText: currentTarget.value\n\t\t});\n\t}\n\n\trender(props, { isFinishedSelected, canCloseTaskCreation, searchText, isEdit, editableIndex, date }) {\n\t\tif (typeof window !== \"undefined\") {\n\t\t\tlet { localStorage } = window;\n\t\t\tlet dates = localStorage.getItem('dates');\n\t\t\tif (!dates) {\n\t\t\t\treturn (<div><NewTask canCloseTaskCreation={false} closeNewTask={this.closeNewTask} isDirectCreate={true} /></div>);\n\t\t\t}\n\t\t\tdates = JSON.parse(dates);\n\t\t\tdates = dates || [];\n\t\t\tlet formattedDates = this.getFormattedDates(dates);\n\n\t\t\treturn  (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class={`columns ${style.home} is-align-items-center`}>\n\t\t\t\t\t\t\t<div class=\"dropdown is-hoverable column\">\n\t\t\t\t\t\t\t\t<b class=\"is-size-1\" style={{color: \"#0c1be2\"}}>LTM</b>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<input class=\"column input is-rounded is-medium is-three-quarters\" type=\"text\" placeholder=\"Search your task...\" value={searchText} onchange={this.initiateSearch} />\n\t\t\t\t\t\t\t<div class=\"column has-text-centered\">\n\t\t\t\t\t\t\t\t<button class=\"button is-link\" onclick={this.openNewTask}>New Task</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"tabs is-large is-boxed\" style=\"width: 74%; margin: 0px auto;\">\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li class={isFinishedSelected ? '' : 'is-active'} onclick={() => this.switchStates(false)}><a>Unfinished</a></li>\n\t\t\t\t\t\t\t\t<li class={isFinishedSelected ? 'is-active': ''} onclick={() => this.switchStates(true)}><a>Finished</a></li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<TaskList dates={dates} formattedDates={formattedDates} isFinishedSelected={isFinishedSelected} searchText={searchText} editTask={this.editTask} />\n\t\t\t\t\t\t<NewTask canCloseTaskCreation={canCloseTaskCreation} closeNewTask={this.closeNewTask} isEdit={isEdit} editableIndex={editableIndex} date={date} />\n\t\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\tlet { localStorage } = window;\n\t\tlet dates = localStorage.getItem('dates');\n\t\tif (dates) {\n\t\t\t// Removing outDated dates\n\t\t\tlet todayDate = new Date();\n\t\t\tdates = JSON.parse(dates) || [];\n\t\n\t\t\tlet resDates = dates.filter((date) => {\n\t\t\t\tlet dateObj = new Date(date);\n\t\t\t\tconst diffTime = Math.abs(dateObj - todayDate);\n\t\t\t\tconst diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\t\t\t\treturn diffDays < 30;\n\t\t\t});\n\t\t\tlocalStorage.setItem('dates', JSON.stringify(resDates));\n\n\t\t\tlet outDatedDates = dates.filter((date) => {\n\t\t\t\tlet dateObj = new Date(date);\n\t\t\t\tconst diffTime = Math.abs(dateObj - todayDate);\n\t\t\t\tconst diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\t\t\t\treturn diffDays > 30;\n\t\t\t});\n\t\t\toutDatedDates.forEach((date) => {\n\t\t\t\tlocalStorage.removeItem(date);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport default Home;\n","import style from './style.css';\nimport { Component } from 'preact';\n\nclass newTask extends Component {\n  state = {\n    error: '',\n    task: '',\n    description: '',\n    date: `${new Date().getFullYear()}-${(new Date().getMonth()+1).toString().length==1?'0':''}${new Date().getMonth()+1}-${new Date().getDate().toString().length==1?'0':''}${new Date().getDate()}`\n  }\n\n  changeValue = (value, target) => {\n    let obj = {}\n    obj[target] = value;\n    this.setState(obj);\n  }\n\n  createNewTask = ({ resultObj, closeNewTask, msg }) => {\n    let { state } = this;\n    let { localStorage } = window;\n    let oldData = localStorage.getItem(state.date);\n\n    if (oldData) {\n      oldData = JSON.parse(oldData);\n      let taskNames = oldData.map(({ task }) => task);\n\n      if (taskNames.includes(state.task)) {\n        this.setState({\n          error: 'Task Name already exists'\n        });\n        return;\n      }\n      oldData.push(resultObj);\n      localStorage.setItem(state.date, JSON.stringify(oldData));\n      this.addDates();\n      closeNewTask(msg || 'Your Task added successfully');\n      return;\n    }\n    localStorage.setItem(state.date, JSON.stringify([resultObj]));\n    this.addDates();\n    closeNewTask(msg || 'Your Task added successfully');\n  }\n\n  createTask = ({ closeNewTask, date, editableIndex, isEdit }) => {\n    let { state } = this;\n    this.setState({ error: '' });\n\n    if (!state.task) {\n      this.setState({\n        error: 'Kindly fill the task'\n      });\n      return;\n    }\n    if (!state.date || !new Date(state.date).getTime() === NaN) {\n      this.setState({\n        error: 'Kindly select the date'\n      });\n      return;\n    }\n\n    let resultObj = {\n      task: state.task\n    }\n\n    if (state.description) {\n      resultObj.description = state.description;\n    }\n    if (isEdit) {\n      let { localStorage } = window;\n      let tasks = localStorage.getItem(date);\n      tasks = JSON.parse(tasks) || [];\n      resultObj.isFinished = !!tasks[editableIndex].isFinished;\n\n      if (date === state.date) {\n        tasks[editableIndex] = resultObj;\n        localStorage.setItem(state.date, JSON.stringify(tasks));\n        closeNewTask('Your Task Edited successfully');\n        return;\n      }\n      delete tasks[editableIndex];\n      tasks = tasks.filter((task) => task);\n\n      if (tasks.length) {\n        localStorage.setItem(date, JSON.stringify(tasks));\n      } else {\n        localStorage.removeItem(date);\n      }\n      this.createNewTask({ resultObj, closeNewTask, msg: 'Your Task Edited successfully' });\n      return;\n    }\n    this.createNewTask({ resultObj, closeNewTask });\n  }\n\n  addDates = () => {\n    let { localStorage } = window;\n    let dates = localStorage.getItem('dates');\n    let {date} = this.state;\n\n    if (dates) {\n      dates = JSON.parse(dates);\n      if (!dates.includes(date)) {\n        dates.push(date);\n        localStorage.setItem('dates', JSON.stringify(dates));\n      }\n      return;\n    }\n    localStorage.setItem('dates', JSON.stringify([date]));\n  }\n\n  errorBlock = () => {\n    if (!this.state.error) {\n      return;\n    }\n    return (\n      <article class=\"message is-danger\">\n        <div class=\"message-body p-3\">\n          {this.state.error}\n        </div>\n      </article>\n    )\n  }\n\n  componentDidUpdate({ date: prevDate }) {\n    let { date, editableIndex, isEdit }  = this.props;\n    if (isEdit && prevDate !== date && date) {\n      let tasks = localStorage.getItem(date);\n      tasks = (JSON.parse(tasks) || []);\n      let { task, description } = tasks[editableIndex] || {};\n      if  (task) {\n        this.setState({\n          task,\n          description,\n          date\n        });\n      }\n    }\n  }\n\n  render(props, state) {\n    let { canCloseTaskCreation, closeNewTask, isDirectCreate, isEdit } = props;\n    return (\n      <div class={`modal ${canCloseTaskCreation ? \"\": \"is-active\"}`}>\n        <div class=\"modal-background\"></div>\n        <div class=\"modal-card\">\n          <header class=\"modal-card-head\">\n            <p class=\"modal-card-title\">{isEdit ? 'Edit' : 'New'} Task</p>\n            {isDirectCreate ? '' : <button class=\"delete\" aria-label=\"close\" onclick={() => { closeNewTask() }}></button>}\n          </header>\n          <section class=\"modal-card-body\">\n            {this.errorBlock()}\n            <div class=\"field\">\n              <label class=\"label\">Task</label>\n              <div class=\"control\">\n                <input class=\"input\" type=\"text\" placeholder=\"Type your Task\" value={state.task} onchange={({ target }) => this.changeValue(target.value, 'task')} />\n              </div>\n            </div>\n            <div class=\"field\">\n              <label class=\"label\">Description</label>\n              <div class=\"control\">\n                <textarea class=\"textarea\" placeholder=\"Type your description\" value={state.description} onchange={({ target }) => this.changeValue(target.value, 'description')} />\n              </div>\n            </div>\n            <div class=\"field\">\n              <label class=\"label\">Date</label>\n              <div class=\"control\">\n                <input type=\"date\" name=\"dateofbirth\" id=\"dateofbirth\" value={state.date} onchange={({ target }) => this.changeValue(target.value, 'date')} />\n              </div>\n            </div>\n          </section>\n          <footer class=\"modal-card-foot\">\n            <button class=\"button is-link\" onclick={() => { this.createTask(props) }}>{isEdit ? 'Edit' : 'Create'}</button>\n            {isDirectCreate ? '': <button class=\"button is-link is-light is-outlined\" onclick={() => { closeNewTask() }}>Cancel</button>}\n          </footer>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default newTask;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"home__MseGd\",\"notificationBanner\":\"notificationBanner__GnNPS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dateHeading\":\"dateHeading__D9mbW\",\"accordion\":\"accordion__3LOg6\",\"active\":\"active__1GYBM\",\"panel\":\"panel__ZwcEE\",\"finishedSvg\":\"finishedSvg__3oOmi\",\"deleteSvg\":\"deleteSvg__3F8zA\",\"tooltip\":\"tooltip__wg2gI\",\"tooltiptext\":\"tooltiptext__2KLF9\",\"overflowAnyware\":\"overflowAnyware__p9LXI\"};","import { Component, Fragment } from 'preact';\nimport style from './style.css';\n\nclass TaskList extends Component {\n  getDBTasks(date) {\n    let { localStorage } = window;\n    let tasks = localStorage.getItem(date);\n    return (JSON.parse(tasks) || []);\n  }\n\n  getTaskArr = (date, isFinishedSelected, searchText) => {\n    let tasks = this.getDBTasks(date);\n    let resTasks = tasks.map((task, index) => {\n      let myTask = JSON.parse(JSON.stringify(task));\n      myTask.originalIndex = index;\n      return myTask;\n    });\n  \n    if  (isFinishedSelected) {\n      resTasks = resTasks.filter(({ isFinished }) => isFinished);\n    } else {\n      resTasks = resTasks.filter(({ isFinished }) => !isFinished);\n    }\n\n    if  (searchText) {\n      return resTasks.filter(({ task, description }) => task.includes(searchText) || description.includes(searchText));\n    }\n    return resTasks;\n  }\n\n  dateSection = (date, formattedDate, isFinishedSelected, searchText) => {\n      let tasks = this.getTaskArr(date, isFinishedSelected, searchText);\n      if (tasks.length) {\n        return (<h1 class={`is-size-5 ${style.dateHeading} mb-4`}>{formattedDate}</h1>);\n      }\n      return '';\n  }\n\n  markFinished = (e, { date, index, isFinishedSelected, searchText }) => {\n    e.stopPropagation();\n    let tasks = this.getTaskArr(date, isFinishedSelected, searchText);\n    let { originalIndex } = tasks[index];\n    let DBTasks = this.getDBTasks(date);\n    let { localStorage } = window;\n    DBTasks[originalIndex].isFinished = !isFinishedSelected;\n    localStorage.setItem(date, JSON.stringify(DBTasks));\n    let msg = isFinishedSelected ? 'Your Task is marked as Unfinished' : 'Your Task is marked as finished';\n    alert(msg);\n    window.location.reload();\n  }\n\n  deleteTask = (e, { date, index, isFinishedSelected }) => {\n    e.stopPropagation();\n    let tasks = this.getTaskArr(date, isFinishedSelected);\n    let { originalIndex } = tasks[index];\n    let DBTasks = this.getDBTasks(date);\n    delete DBTasks[originalIndex];\n    DBTasks = DBTasks.filter((task) => task);\n    let { localStorage } = window;\n    if (DBTasks.length) {\n      localStorage.setItem(date, JSON.stringify(DBTasks));\n    } else {\n      localStorage.removeItem(date);\n    }\n    alert('Your task is deleted Successfully');\n    window.location.reload();\n  }\n\n  editTask = (e, { date, index, isFinishedSelected, editTask }) => {\n    e.stopPropagation();\n    let tasks = this.getTaskArr(date, isFinishedSelected);\n    let { originalIndex } = tasks[index];\n    editTask({ index: originalIndex, date });\n  }\n\n  getThumbsIcon = ({ index, date, isFinishedSelected, searchText }) => {\n    if (isFinishedSelected) {\n      return (\n        <div class={style.tooltip}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" class={style.deleteSvg} stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" onclick={(e) => this.markFinished(e, { index, date, isFinishedSelected, searchText })}>\n            <path d=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"/>\n          </svg>\n          <span class={style.tooltiptext}>Mark as Unfinished</span>\n        </div>\n      )\n    }\n    return (\n      <div class={style.tooltip}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" class={`${style.finishedSvg}`} stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" onclick={(e) => this.markFinished(e, { index, date, isFinishedSelected, searchText })}>\n          <path d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"/>\n        </svg>\n        <span class={style.tooltiptext}>Mark as finished</span>\n      </div>\n    )\n  }\n\n  getTasks = (date, isFinishedSelected, searchText, editTask) => {\n    let tasks = this.getTaskArr(date, isFinishedSelected, searchText);\n\n    return tasks.map(({ task, description}, index) => {\n      return(\n        <Fragment>\n          <button class={`${style.accordion} notification is-link is-light columns is-align-items-center m-0 is-size-4`} onclick={this.toggleSlide}>\n            <div class={`column is-four-fifths p-0 ${style.overflowAnyware}`}>{task}</div>\n            <div class=\"column has-text-right p-0\">\n              {this.getThumbsIcon({ index, date, isFinishedSelected, searchText })}\n              <div class={style.tooltip}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"ml-2\" onclick={(e) => this.editTask(e, { index, date, isFinishedSelected, searchText, editTask })}>\n                  <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"/>\n                  <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"/>\n                </svg>\n                <span class={style.tooltiptext}>Edit</span>\n              </div>\n              <div class={style.tooltip}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class={`ml-2 ${style.deleteSvg}`} onclick={(e) => this.deleteTask(e, { index, date, isFinishedSelected, searchText })}>\n                  <polyline points=\"3 6 5 6 21 6\"/>\n                  <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"/>\n                  <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"/><line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"/>\n                </svg>\n                <span class={style.tooltiptext}>Delete</span>\n              </div>\n            </div>\n          </button>\n          <div class={`${style.panel}`}>{description}</div>\n        </Fragment>\n      )\n    })\n  }\n\n  toggleSlide({ currentTarget }) {\n    currentTarget.classList.toggle(style.active);\n    let { nextElementSibling: panel } = currentTarget;\n    if (panel.style.maxHeight) {\n      panel.style.maxHeight = null;\n    } else {\n      panel.style.maxHeight = `${panel.scrollHeight}px`;\n    }\n  }\n\n  render({ dates, formattedDates, isFinishedSelected, searchText, editTask }) {\n    return (\n      <div style={{width: '74%', margin: '0 auto'}}>\n        {formattedDates.map((date, index) => {\n          return (\n            <div>\n              {this.dateSection(dates[index], date, isFinishedSelected, searchText)}\n              {this.getTasks(dates[index], isFinishedSelected, searchText, editTask)}\n            </div>\n          );\n        })}\n      </div>\n    )\n  }\n}\n\nexport default TaskList;"],"sourceRoot":""}