{"version":3,"sources":["webpack:///./routes/home/index.js","webpack:///./components/new-task/index.js","webpack:///./routes/home/style.css","webpack:///./components/task-list/style.css","webpack:///./components/task-list/index.js"],"names":["Home","Component","state","canCloseTaskCreation","isFinishedSelected","searchText","isEdit","editableIndex","task","date","monthNames","switchStates","this","setState","openNewTask","editTask","index","closeNewTask","notificationMsg","alert","getFormattedDates","dates","map","dateObj","Date","monthName","getMonth","getDate","toString","length","getFullYear","initiateSearch","currentTarget","value","render","props","window","localStorage","getItem","isDirectCreate","JSON","parse","formattedDates","class","style","home","color","type","placeholder","onchange","onclick","componentDidMount","todayDate","resDates","filter","diffTime","Math","abs","ceil","setItem","stringify","forEach","removeItem","newTask","error","description","changeValue","target","obj","createNewTask","resultObj","msg","oldData","includes","push","addDates","createTask","NaN","getTime","tasks","isFinished","errorBlock","componentDidUpdate","prevDate","aria-label","name","id","module","exports","TaskList","getTaskArr","resTasks","getDBTasks","myTask","originalIndex","dateSection","formattedDate","dateHeading","markFinished","e","stopPropagation","DBTasks","location","reload","deleteTask","getThumbsIcon","tooltip","xmlns","width","height","viewBox","fill","stroke","deleteSvg","stroke-width","stroke-linecap","stroke-linejoin","d","tooltiptext","finishedSvg","getTasks","accordion","toggleSlide","overflowAnyware","points","x1","y1","x2","y2","panel","classList","toggle","active","nextElementSibling","maxHeight","scrollHeight","margin"],"mappings":"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","file":"route-home.chunk.2b0ff.esm.js","sourcesContent":["import { Component } from 'preact';\nimport style from './style.css';\nimport NewTask from '../../components/new-task';\nimport TaskList from '../../components/task-list';\n\nclass Home extends Component {\n\tstate = {\n    canCloseTaskCreation: true,\n\t\tisFinishedSelected: false,\n\t\tsearchText: '',\n\t\tisEdit: false,\n\t\teditableIndex: '',\n\t\ttask: {},\n\t\tdate: ''\n  }\n\n\tmonthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\tswitchStates = (isFinishedSelected) => {\n\t\tthis.setState({ isFinishedSelected });\n\t}\n\n\topenNewTask = () => {\n\t\tthis.setState({\n\t\t\tisEdit: false,\n\t\t\tcanCloseTaskCreation: false\n\t\t})\n\t}\n\n\teditTask = ({ index, date }) => {\n\t\tthis.setState({\n\t\t\tdate,\n\t\t\teditableIndex: index,\n\t\t\tcanCloseTaskCreation: false,\n\t\t\tisEdit: true\n\t\t})\n\t}\n\n\tcloseNewTask = (notificationMsg) => {\n    this.setState({\n      canCloseTaskCreation: true\n    });\n\n\t\tif (notificationMsg) {\n\t\t\talert(notificationMsg);\n\t\t}\n  }\n\n\tgetFormattedDates = (dates) => {\n\t\treturn dates.map((date) => {\n\t\t\tlet dateObj = new Date(date);\n\t\t\tlet monthName = this.monthNames[dateObj.getMonth()];\n\t\t\treturn `${dateObj.getDate().toString().length==1?'0':''}${dateObj.getDate()} ${monthName} ${dateObj.getFullYear()}`;\n\t\t});\n\t}\n\n\tinitiateSearch = ({ currentTarget }) => {\n\t\tthis.setState({\n\t\t\tsearchText: currentTarget.value\n\t\t});\n\t}\n\n\trender(props, { isFinishedSelected, canCloseTaskCreation, searchText, isEdit, editableIndex, date }) {\n\t\tif (typeof window !== \"undefined\") {\n\t\t\tlet { localStorage } = window;\n\t\t\tlet dates = localStorage.getItem('dates');\n\t\t\tif (!dates) {\n\t\t\t\treturn (<div><NewTask canCloseTaskCreation={false} closeNewTask={this.closeNewTask} isDirectCreate={true} /></div>);\n\t\t\t}\n\t\t\tdates = JSON.parse(dates);\n\t\t\tdates = dates || [];\n\t\t\tlet formattedDates = this.getFormattedDates(dates);\n\n\t\t\treturn  (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class={`columns ${style.home} is-align-items-center`}>\n\t\t\t\t\t\t\t<div class=\"dropdown is-hoverable column\">\n\t\t\t\t\t\t\t\t<b class=\"is-size-1\" style={{color: \"#0c1be2\"}}>LTM</b>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<input class=\"column input is-rounded is-medium is-three-quarters\" type=\"text\" placeholder=\"Search your task...\" value={searchText} onchange={this.initiateSearch} />\n\t\t\t\t\t\t\t<div class=\"column has-text-centered\">\n\t\t\t\t\t\t\t\t<button class=\"button is-link\" onclick={this.openNewTask}>New Task</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"tabs is-large is-boxed\" style=\"width: 74%; margin: 0px auto;\">\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li class={isFinishedSelected ? '' : 'is-active'} onclick={() => this.switchStates(false)}><a>Unfinished</a></li>\n\t\t\t\t\t\t\t\t<li class={isFinishedSelected ? 'is-active': ''} onclick={() => this.switchStates(true)}><a>Finished</a></li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<TaskList dates={dates} formattedDates={formattedDates} isFinishedSelected={isFinishedSelected} searchText={searchText} editTask={this.editTask} />\n\t\t\t\t\t\t<NewTask canCloseTaskCreation={canCloseTaskCreation} closeNewTask={this.closeNewTask} isEdit={isEdit} editableIndex={editableIndex} date={date} />\n\t\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\tlet { localStorage } = window;\n\t\tlet dates = localStorage.getItem('dates');\n\t\tif (dates) {\n\t\t\t// Removing outDated dates\n\t\t\tlet todayDate = new Date();\n\t\t\tdates = JSON.parse(dates) || [];\n\t\n\t\t\tlet resDates = dates.filter((date) => {\n\t\t\t\tlet dateObj = new Date(date);\n\t\t\t\tconst diffTime = Math.abs(dateObj - todayDate);\n\t\t\t\tconst diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\t\t\t\treturn diffDays < 30;\n\t\t\t});\n\t\t\tlocalStorage.setItem('dates', JSON.stringify(resDates));\n\n\t\t\tlet outDatedDates = dates.filter((date) => {\n\t\t\t\tlet dateObj = new Date(date);\n\t\t\t\tconst diffTime = Math.abs(dateObj - todayDate);\n\t\t\t\tconst diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\t\t\t\treturn diffDays > 30;\n\t\t\t});\n\t\t\toutDatedDates.forEach((date) => {\n\t\t\t\tlocalStorage.removeItem(date);\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport default Home;\n","import style from './style.css';\nimport { Component } from 'preact';\n\nclass newTask extends Component {\n  state = {\n    error: '',\n    task: '',\n    description: '',\n    date: `${new Date().getFullYear()}-${(new Date().getMonth()+1).toString().length==1?'0':''}${new Date().getMonth()+1}-${new Date().getDate().toString().length==1?'0':''}${new Date().getDate()}`\n  }\n\n  changeValue = (value, target) => {\n    let obj = {}\n    obj[target] = value;\n    this.setState(obj);\n  }\n\n  createNewTask = ({ resultObj, closeNewTask, msg }) => {\n    let { state } = this;\n    let { localStorage } = window;\n    let oldData = localStorage.getItem(state.date);\n\n    if (oldData) {\n      oldData = JSON.parse(oldData);\n      let taskNames = oldData.map(({ task }) => task);\n\n      if (taskNames.includes(state.task)) {\n        this.setState({\n          error: 'Task Name already exists'\n        });\n        return;\n      }\n      oldData.push(resultObj);\n      localStorage.setItem(state.date, JSON.stringify(oldData));\n      this.addDates();\n      closeNewTask(msg || 'Your Task added successfully');\n      return;\n    }\n    localStorage.setItem(state.date, JSON.stringify([resultObj]));\n    this.addDates();\n    closeNewTask(msg || 'Your Task added successfully');\n  }\n\n  createTask = ({ closeNewTask, date, editableIndex, isEdit }) => {\n    let { state } = this;\n    this.setState({ error: '' });\n\n    if (!state.task) {\n      this.setState({\n        error: 'Kindly fill the task'\n      });\n      return;\n    }\n    if (!state.date || !new Date(state.date).getTime() === NaN) {\n      this.setState({\n        error: 'Kindly select the date'\n      });\n      return;\n    }\n\n    let resultObj = {\n      task: state.task\n    }\n\n    if (state.description) {\n      resultObj.description = state.description;\n    }\n    if (isEdit) {\n      let { localStorage } = window;\n      let tasks = localStorage.getItem(date);\n      tasks = JSON.parse(tasks) || [];\n      resultObj.isFinished = !!tasks[editableIndex].isFinished;\n\n      if (date === state.date) {\n        tasks[editableIndex] = resultObj;\n        localStorage.setItem(state.date, JSON.stringify(tasks));\n        closeNewTask('Your Task Edited successfully');\n        return;\n      }\n      delete tasks[editableIndex];\n      tasks = tasks.filter((task) => task);\n\n      if (tasks.length) {\n        localStorage.setItem(date, JSON.stringify(tasks));\n      } else {\n        localStorage.removeItem(date);\n      }\n      this.createNewTask({ resultObj, closeNewTask, msg: 'Your Task Edited successfully' });\n      return;\n    }\n    this.createNewTask({ resultObj, closeNewTask });\n  }\n\n  addDates = () => {\n    let { localStorage } = window;\n    let dates = localStorage.getItem('dates');\n    let {date} = this.state;\n\n    if (dates) {\n      dates = JSON.parse(dates);\n      if (!dates.includes(date)) {\n        dates.push(date);\n        localStorage.setItem('dates', JSON.stringify(dates));\n      }\n      return;\n    }\n    localStorage.setItem('dates', JSON.stringify([date]));\n  }\n\n  errorBlock = () => {\n    if (!this.state.error) {\n      return;\n    }\n    return (\n      <article class=\"message is-danger\">\n        <div class=\"message-body p-3\">\n          {this.state.error}\n        </div>\n      </article>\n    )\n  }\n\n  componentDidUpdate({ date: prevDate }) {\n    let { date, editableIndex, isEdit }  = this.props;\n    if (isEdit && prevDate !== date && date) {\n      let tasks = localStorage.getItem(date);\n      tasks = (JSON.parse(tasks) || []);\n      let { task, description } = tasks[editableIndex] || {};\n      if  (task) {\n        this.setState({\n          task,\n          description,\n          date\n        });\n      }\n    }\n  }\n\n  render(props, state) {\n    let { canCloseTaskCreation, closeNewTask, isDirectCreate, isEdit } = props;\n    return (\n      <div class={`modal ${canCloseTaskCreation ? \"\": \"is-active\"}`}>\n        <div class=\"modal-background\"></div>\n        <div class=\"modal-card\">\n          <header class=\"modal-card-head\">\n            <p class=\"modal-card-title\">{isEdit ? 'Edit' : 'New'} Task</p>\n            {isDirectCreate ? '' : <button class=\"delete\" aria-label=\"close\" onclick={() => { closeNewTask() }}></button>}\n          </header>\n          <section class=\"modal-card-body\">\n            {this.errorBlock()}\n            <div class=\"field\">\n              <label class=\"label\">Task</label>\n              <div class=\"control\">\n                <input class=\"input\" type=\"text\" placeholder=\"Type your Task\" value={state.task} onchange={({ target }) => this.changeValue(target.value, 'task')} />\n              </div>\n            </div>\n            <div class=\"field\">\n              <label class=\"label\">Description</label>\n              <div class=\"control\">\n                <textarea class=\"textarea\" placeholder=\"Type your description\" value={state.description} onchange={({ target }) => this.changeValue(target.value, 'description')} />\n              </div>\n            </div>\n            <div class=\"field\">\n              <label class=\"label\">Date</label>\n              <div class=\"control\">\n                <input type=\"date\" name=\"dateofbirth\" id=\"dateofbirth\" value={state.date} onchange={({ target }) => this.changeValue(target.value, 'date')} />\n              </div>\n            </div>\n          </section>\n          <footer class=\"modal-card-foot\">\n            <button class=\"button is-link\" onclick={() => { this.createTask(props) }}>{isEdit ? 'Edit' : 'Create'}</button>\n            {isDirectCreate ? '': <button class=\"button is-link is-light is-outlined\" onclick={() => { closeNewTask() }}>Cancel</button>}\n          </footer>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default newTask;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"home__MseGd\",\"notificationBanner\":\"notificationBanner__GnNPS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dateHeading\":\"dateHeading__D9mbW\",\"accordion\":\"accordion__3LOg6\",\"active\":\"active__1GYBM\",\"panel\":\"panel__ZwcEE\",\"finishedSvg\":\"finishedSvg__3oOmi\",\"deleteSvg\":\"deleteSvg__3F8zA\",\"tooltip\":\"tooltip__wg2gI\",\"tooltiptext\":\"tooltiptext__2KLF9\",\"overflowAnyware\":\"overflowAnyware__p9LXI\"};","import { Component, Fragment } from 'preact';\nimport style from './style.css';\n\nclass TaskList extends Component {\n  getDBTasks(date) {\n    let { localStorage } = window;\n    let tasks = localStorage.getItem(date);\n    return (JSON.parse(tasks) || []);\n  }\n\n  getTaskArr = (date, isFinishedSelected, searchText) => {\n    let tasks = this.getDBTasks(date);\n    let resTasks = tasks.map((task, index) => {\n      let myTask = JSON.parse(JSON.stringify(task));\n      myTask.originalIndex = index;\n      return myTask;\n    });\n  \n    if  (isFinishedSelected) {\n      resTasks = resTasks.filter(({ isFinished }) => isFinished);\n    } else {\n      resTasks = resTasks.filter(({ isFinished }) => !isFinished);\n    }\n\n    if  (searchText) {\n      return resTasks.filter(({ task, description }) => task.includes(searchText) || description.includes(searchText));\n    }\n    return resTasks;\n  }\n\n  dateSection = (date, formattedDate, isFinishedSelected, searchText) => {\n      let tasks = this.getTaskArr(date, isFinishedSelected, searchText);\n      if (tasks.length) {\n        return (<h1 class={`is-size-5 ${style.dateHeading} mb-4`}>{formattedDate}</h1>);\n      }\n      return '';\n  }\n\n  markFinished = (e, { date, index, isFinishedSelected, searchText }) => {\n    e.stopPropagation();\n    let tasks = this.getTaskArr(date, isFinishedSelected, searchText);\n    let { originalIndex } = tasks[index];\n    let DBTasks = this.getDBTasks(date);\n    let { localStorage } = window;\n    DBTasks[originalIndex].isFinished = !isFinishedSelected;\n    localStorage.setItem(date, JSON.stringify(DBTasks));\n    let msg = isFinishedSelected ? 'Your Task is marked as Unfinished' : 'Your Task is marked as finished';\n    alert(msg);\n    window.location.reload();\n  }\n\n  deleteTask = (e, { date, index, isFinishedSelected }) => {\n    e.stopPropagation();\n    let tasks = this.getTaskArr(date, isFinishedSelected);\n    let { originalIndex } = tasks[index];\n    let DBTasks = this.getDBTasks(date);\n    delete DBTasks[originalIndex];\n    DBTasks = DBTasks.filter((task) => task);\n    let { localStorage } = window;\n    if (DBTasks.length) {\n      localStorage.setItem(date, JSON.stringify(DBTasks));\n    } else {\n      localStorage.removeItem(date);\n    }\n    alert('Your task is deleted Successfully');\n    window.location.reload();\n  }\n\n  editTask = (e, { date, index, isFinishedSelected, editTask }) => {\n    e.stopPropagation();\n    let tasks = this.getTaskArr(date, isFinishedSelected);\n    let { originalIndex } = tasks[index];\n    editTask({ index: originalIndex, date });\n  }\n\n  getThumbsIcon = ({ index, date, isFinishedSelected, searchText }) => {\n    if (isFinishedSelected) {\n      return (\n        <div class={style.tooltip}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" class={style.deleteSvg} stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" onclick={(e) => this.markFinished(e, { index, date, isFinishedSelected, searchText })}>\n            <path d=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"/>\n          </svg>\n          <span class={style.tooltiptext}>Mark as Unfinished</span>\n        </div>\n      )\n    }\n    return (\n      <div class={style.tooltip}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" class={`${style.finishedSvg}`} stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" onclick={(e) => this.markFinished(e, { index, date, isFinishedSelected, searchText })}>\n          <path d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"/>\n        </svg>\n        <span class={style.tooltiptext}>Mark as finished</span>\n      </div>\n    )\n  }\n\n  getTasks = (date, isFinishedSelected, searchText, editTask) => {\n    let tasks = this.getTaskArr(date, isFinishedSelected, searchText);\n\n    return tasks.map(({ task, description}, index) => {\n      return(\n        <Fragment>\n          <button class={`${style.accordion} notification is-link is-light columns is-align-items-center m-0 is-size-4`} onclick={this.toggleSlide}>\n            <div class={`column is-four-fifths p-0 ${style.overflowAnyware}`}>{task}</div>\n            <div class=\"column has-text-right p-0\">\n              {this.getThumbsIcon({ index, date, isFinishedSelected, searchText })}\n              <div class={style.tooltip}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"ml-2\" onclick={(e) => this.editTask(e, { index, date, isFinishedSelected, searchText, editTask })}>\n                  <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"/>\n                  <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"/>\n                </svg>\n                <span class={style.tooltiptext}>Edit</span>\n              </div>\n              <div class={style.tooltip}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class={`ml-2 ${style.deleteSvg}`} onclick={(e) => this.deleteTask(e, { index, date, isFinishedSelected, searchText })}>\n                  <polyline points=\"3 6 5 6 21 6\"/>\n                  <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"/>\n                  <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"/><line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"/>\n                </svg>\n                <span class={style.tooltiptext}>Delete</span>\n              </div>\n            </div>\n          </button>\n          <div class={`${style.panel}`}>{description}</div>\n        </Fragment>\n      )\n    })\n  }\n\n  toggleSlide({ currentTarget }) {\n    currentTarget.classList.toggle(style.active);\n    let { nextElementSibling: panel } = currentTarget;\n    if (panel.style.maxHeight) {\n      panel.style.maxHeight = null;\n    } else {\n      panel.style.maxHeight = `${panel.scrollHeight}px`;\n    }\n  }\n\n  render({ dates, formattedDates, isFinishedSelected, searchText, editTask }) {\n    return (\n      <div style={{width: '74%', margin: '0 auto'}}>\n        {formattedDates.map((date, index) => {\n          return (\n            <div>\n              {this.dateSection(dates[index], date, isFinishedSelected, searchText)}\n              {this.getTasks(dates[index], isFinishedSelected, searchText, editTask)}\n            </div>\n          );\n        })}\n      </div>\n    )\n  }\n}\n\nexport default TaskList;"],"sourceRoot":""}