{"version":3,"sources":["webpack:///./routes/home/index.js","webpack:///./components/new-task/index.js","webpack:///./routes/home/style.css","webpack:///./components/task-list/style.css","webpack:///./components/task-list/index.js"],"names":["Home","Component","state","canCloseTaskCreation","isFinishedSelected","searchText","isEdit","editableIndex","task","date","isAsc","monthNames","switchStates","this","setState","openNewTask","editTask","index","closeNewTask","notificationMsg","alert","getFormattedDates","dates","map","dateObj","Date","monthName","getMonth","getDate","toString","length","getFullYear","initiateSearch","currentTarget","value","changeSortOrder","console","log","render","props","window","localStorage","getItem","JSON","parse","sort","a","b","formattedDates","class","style","home","color","type","placeholder","onchange","onclick","xmlns","width","height","viewBox","stroke","stroke-width","stroke-linecap","stroke-linejoin","fill","sortIcon","d","newTask","error","description","changeValue","target","obj","createNewTask","resultObj","msg","oldData","includes","push","setItem","stringify","addDates","createTask","NaN","getTime","tasks","isFinished","filter","removeItem","errorBlock","componentDidMount","aria-label","name","id","module","exports","TaskList","getTaskArr","resTasks","getDBTasks","myTask","originalIndex","dateSection","formattedDate","dateHeading","markFinished","e","stopPropagation","DBTasks","location","reload","deleteTask","getThumbsIcon","tooltip","deleteSvg","tooltiptext","finishedSvg","getTasks","accordion","toggleSlide","overflowAnyware","points","x1","y1","x2","y2","panel","classList","toggle","active","nextElementSibling","maxHeight","scrollHeight","margin"],"mappings":"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","file":"route-home.chunk.898a9.esm.js","sourcesContent":["import { Component } from 'preact';\nimport style from './style.css';\nimport NewTask from '../../components/new-task';\nimport TaskList from '../../components/task-list';\n\nclass Home extends Component {\n\tstate = {\n    canCloseTaskCreation: true,\n\t\tisFinishedSelected: false,\n\t\tsearchText: '',\n\t\tisEdit: false,\n\t\teditableIndex: '',\n\t\ttask: {},\n\t\tdate: '',\n\t\tisAsc: true\n  }\n\n\tmonthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\tswitchStates = (isFinishedSelected) => {\n\t\tthis.setState({ isFinishedSelected });\n\t}\n\n\topenNewTask = () => {\n\t\tthis.setState({\n\t\t\tisEdit: false,\n\t\t\tcanCloseTaskCreation: false\n\t\t})\n\t}\n\n\teditTask = ({ index, date }) => {\n\t\tthis.setState({\n\t\t\tdate,\n\t\t\teditableIndex: index,\n\t\t\tcanCloseTaskCreation: false,\n\t\t\tisEdit: true\n\t\t})\n\t}\n\n\tcloseNewTask = (notificationMsg) => {\n    this.setState({\n      canCloseTaskCreation: true\n    });\n\n\t\tif (notificationMsg) {\n\t\t\talert(notificationMsg);\n\t\t}\n  }\n\n\tgetFormattedDates = (dates) => {\n\t\treturn dates.map((date) => {\n\t\t\tlet dateObj = new Date(date);\n\t\t\tlet monthName = this.monthNames[dateObj.getMonth()];\n\t\t\treturn `${dateObj.getDate().toString().length==1?'0':''}${dateObj.getDate()} ${monthName} ${dateObj.getFullYear()}`;\n\t\t});\n\t}\n\n\tinitiateSearch = ({ currentTarget }) => {\n\t\tthis.setState({\n\t\t\tsearchText: currentTarget.value\n\t\t});\n\t}\n\n\tchangeSortOrder = (isAsc) => {\n\t\tconsole.log('kdkd', isAsc)\n\t\tthis.setState({ isAsc });\n\t}\n\n\trender(props, { isFinishedSelected, canCloseTaskCreation, searchText, isEdit, editableIndex, date, isAsc }) {\n\t\tif (typeof window !== \"undefined\") {\n\t\t\tlet { localStorage } = window;\n\t\t\tlet dates = localStorage.getItem('dates');\n\t\t\tdates = JSON.parse(dates);\n\t\t\tdates = dates || [];\n\t\t\tif\t(isAsc) {\n\t\t\t\tdates = dates.sort((a, b) => new Date(a) - new Date(b));\n\t\t\t} else {\n\t\t\t\tdates = dates.sort((a, b) => new Date(b) - new Date(a));\n\t\t\t}\n\t\t\t\n\t\t\tlet formattedDates = this.getFormattedDates(dates);\n\n\t\t\treturn  (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div class={`columns ${style.home} is-align-items-center`}>\n\t\t\t\t\t\t\t<div class=\"dropdown is-hoverable column\">\n\t\t\t\t\t\t\t\t<b class=\"is-size-1\" style={{color: \"#0c1be2\"}}>LTM</b>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<input class=\"column input is-rounded is-medium is-three-quarters\" type=\"text\" placeholder=\"Search your task...\" value={searchText} onchange={this.initiateSearch} />\n\t\t\t\t\t\t\t<div class=\"column has-text-centered\">\n\t\t\t\t\t\t\t\t<button class=\"button is-link\" onclick={this.openNewTask}>New Task</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"tabs is-large is-boxed\" style=\"width: 74%; margin: 0px auto;\">\n\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t<li class={isFinishedSelected ? '' : 'is-active'} onclick={() => this.switchStates(false)}><a>Unfinished</a></li>\n\t\t\t\t\t\t\t\t<li class={isFinishedSelected ? 'is-active': ''} onclick={() => this.switchStates(true)}><a>Finished</a></li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t{isAsc ?\n\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48px\" height=\"48px\" viewBox=\"0 0 24 24\" stroke=\"#2329D6\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#2329D6\" class={`cursor-pointer ${style.sortIcon}`} onclick={() => this.changeSortOrder(false)}>\n\t\t\t\t\t\t\t\t<path d=\"M11 9H17\"/>\n\t\t\t\t\t\t\t\t<path d=\"M11 5H19\"/>\n\t\t\t\t\t\t\t\t<path d=\"M11 13H15\"/>\n\t\t\t\t\t\t\t\t<path d=\"M10 17L7 20L4 17\"/>\n\t\t\t\t\t\t\t\t<path d=\"M7 5V19\"/>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48px\" height=\"48px\" viewBox=\"0 0 24 24\" stroke=\"#2329D6\" stroke-width=\"1\" stroke-linecap=\"square\" stroke-linejoin=\"miter\" fill=\"none\" color=\"#2329D6\" class={`cursor-pointer ${style.sortIcon}`} onclick={() => this.changeSortOrder(true)}>\n\t\t\t\t\t\t\t\t<path d=\"M11 16H17\"/>\n\t\t\t\t\t\t\t\t<path d=\"M11 20H19\"/>\n\t\t\t\t\t\t\t\t<path d=\"M11 12H15\"/>\n\t\t\t\t\t\t\t\t<path d=\"M4 8L7 5L10 8\"/>\n\t\t\t\t\t\t\t\t<path d=\"M7 20L7 6\"/>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<TaskList dates={dates} formattedDates={formattedDates} isFinishedSelected={isFinishedSelected} searchText={searchText} editTask={this.editTask} />\n\t\t\t\t\t\t{canCloseTaskCreation ? \"\" : <NewTask closeNewTask={this.closeNewTask} isEdit={isEdit} editableIndex={editableIndex} date={date} />}\n\t\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n\t// componentDidMount() {\n\t// \tlet { localStorage } = window;\n\t// \tlet dates = localStorage.getItem('dates');\n\t// \tif (dates) {\n\t// \t\t// Removing outDated dates\n\t// \t\tlet todayDate = new Date();\n\t// \t\tdates = JSON.parse(dates) || [];\n\t\n\t// \t\tlet resDates = dates.filter((date) => {\n\t// \t\t\tlet dateObj = new Date(date);\n\t// \t\t\tconst diffTime = Math.abs(dateObj - todayDate);\n\t// \t\t\tconst diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\t// \t\t\treturn diffDays < 30;\n\t// \t\t});\n\t// \t\tlocalStorage.setItem('dates', JSON.stringify(resDates));\n\n\t// \t\tlet outDatedDates = dates.filter((date) => {\n\t// \t\t\tlet dateObj = new Date(date);\n\t// \t\t\tconst diffTime = Math.abs(dateObj - todayDate);\n\t// \t\t\tconst diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n\t// \t\t\treturn diffDays > 30;\n\t// \t\t});\n\t// \t\toutDatedDates.forEach((date) => {\n\t// \t\t\tlocalStorage.removeItem(date);\n\t// \t\t});\n\t// \t}\n\t// }\n}\n\nexport default Home;\n","import style from './style.css';\nimport { Component } from 'preact';\n\nclass newTask extends Component {\n  state = {\n    error: '',\n    task: '',\n    description: '',\n    date: `${new Date().getFullYear()}-${(new Date().getMonth()+1).toString().length==1?'0':''}${new Date().getMonth()+1}-${new Date().getDate().toString().length==1?'0':''}${new Date().getDate()}`\n  }\n\n  changeValue = (value, target) => {\n    let obj = {}\n    obj[target] = value;\n    this.setState(obj);\n  }\n\n  createNewTask = ({ resultObj, closeNewTask, msg }) => {\n    let { state } = this;\n    let { localStorage } = window;\n    let oldData = localStorage.getItem(state.date);\n\n    if (oldData) {\n      oldData = JSON.parse(oldData);\n      let taskNames = oldData.map(({ task }) => task);\n\n      if (taskNames.includes(state.task)) {\n        this.setState({\n          error: 'Task Name already exists'\n        });\n        return;\n      }\n      oldData.push(resultObj);\n      localStorage.setItem(state.date, JSON.stringify(oldData));\n      this.addDates();\n      closeNewTask(msg || 'Your Task added successfully');\n      return;\n    }\n    localStorage.setItem(state.date, JSON.stringify([resultObj]));\n    this.addDates();\n    closeNewTask(msg || 'Your Task added successfully');\n  }\n\n  createTask = ({ closeNewTask, date, editableIndex, isEdit }) => {\n    let { state } = this;\n    this.setState({ error: '' });\n\n    if (!state.task) {\n      this.setState({\n        error: 'Kindly fill the task'\n      });\n      return;\n    }\n    if (!state.date || !new Date(state.date).getTime() === NaN) {\n      this.setState({\n        error: 'Kindly select the date'\n      });\n      return;\n    }\n\n    let resultObj = {\n      task: state.task\n    }\n\n    if (state.description) {\n      resultObj.description = state.description;\n    }\n    if (isEdit) {\n      let { localStorage } = window;\n      let tasks = localStorage.getItem(date);\n      tasks = JSON.parse(tasks) || [];\n      resultObj.isFinished = !!tasks[editableIndex].isFinished;\n\n      if (date === state.date) {\n        tasks[editableIndex] = resultObj;\n        localStorage.setItem(state.date, JSON.stringify(tasks));\n        closeNewTask('Your Task Edited successfully');\n        return;\n      }\n      delete tasks[editableIndex];\n      tasks = tasks.filter((task) => task);\n\n      if (tasks.length) {\n        localStorage.setItem(date, JSON.stringify(tasks));\n      } else {\n        localStorage.removeItem(date);\n      }\n      this.createNewTask({ resultObj, closeNewTask, msg: 'Your Task Edited successfully' });\n      return;\n    }\n    this.createNewTask({ resultObj, closeNewTask });\n  }\n\n  addDates = () => {\n    let { localStorage } = window;\n    let dates = localStorage.getItem('dates');\n    let {date} = this.state;\n\n    if (dates) {\n      dates = JSON.parse(dates);\n      if (!dates.includes(date)) {\n        dates.push(date);\n        localStorage.setItem('dates', JSON.stringify(dates));\n      }\n      return;\n    }\n    localStorage.setItem('dates', JSON.stringify([date]));\n  }\n\n  errorBlock = () => {\n    if (!this.state.error) {\n      return;\n    }\n    return (\n      <article class=\"message is-danger\">\n        <div class=\"message-body p-3\">\n          {this.state.error}\n        </div>\n      </article>\n    )\n  }\n\n  componentDidMount = () => {\n    let { date, editableIndex, isEdit }  = this.props;\n\n    if (isEdit && date){\n      let tasks = localStorage.getItem(date);\n      tasks = (JSON.parse(tasks) || []);\n      let { task, description } = tasks[editableIndex] || {};\n\n      if (task) {\n        this.setState({\n          task,\n          description,\n          date\n        });\n      }\n    }\n  }\n\n  render(props, state) {\n    let { closeNewTask, isEdit } = props;\n    return (\n      <div class=\"modal is-active\">\n        <div class=\"modal-background\"></div>\n        <div class=\"modal-card\">\n          <header class=\"modal-card-head\">\n            <p class=\"modal-card-title\">{isEdit ? 'Edit' : 'New'} Task</p>\n            <button class=\"delete\" aria-label=\"close\" onclick={() => { closeNewTask() }}></button>\n          </header>\n          <section class=\"modal-card-body\">\n            {this.errorBlock()}\n            <div class=\"field\">\n              <label class=\"label\">Task</label>\n              <div class=\"control\">\n                <input class=\"input\" type=\"text\" placeholder=\"Type your Task\" value={state.task} onchange={({ target }) => this.changeValue(target.value, 'task')} />\n              </div>\n            </div>\n            <div class=\"field\">\n              <label class=\"label\">Description</label>\n              <div class=\"control\">\n                <textarea class=\"textarea\" placeholder=\"Type your description\" value={state.description} onchange={({ target }) => this.changeValue(target.value, 'description')} />\n              </div>\n            </div>\n            <div class=\"field\">\n              <label class=\"label\">Date</label>\n              <div class=\"control\">\n                <input type=\"date\" name=\"dateofbirth\" id=\"dateofbirth\" value={state.date} onchange={({ target }) => this.changeValue(target.value, 'date')} />\n              </div>\n            </div>\n          </section>\n          <footer class=\"modal-card-foot\">\n            <button class=\"button is-link\" onclick={() => { this.createTask(props) }}>{isEdit ? 'Edit' : 'Create'}</button>\n            <button class=\"button is-link is-light is-outlined\" onclick={() => { closeNewTask() }}>Cancel</button>\n          </footer>\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default newTask;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"home__MseGd\",\"notificationBanner\":\"notificationBanner__GnNPS\",\"sortIcon\":\"sortIcon__1UakV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dateHeading\":\"dateHeading__D9mbW\",\"accordion\":\"accordion__3LOg6\",\"active\":\"active__1GYBM\",\"panel\":\"panel__ZwcEE\",\"finishedSvg\":\"finishedSvg__3oOmi\",\"deleteSvg\":\"deleteSvg__3F8zA\",\"tooltip\":\"tooltip__wg2gI\",\"tooltiptext\":\"tooltiptext__2KLF9\",\"overflowAnyware\":\"overflowAnyware__p9LXI\"};","import { Component, Fragment } from 'preact';\nimport style from './style.css';\n\nclass TaskList extends Component {\n  getDBTasks(date) {\n    let { localStorage } = window;\n    let tasks = localStorage.getItem(date);\n    return (JSON.parse(tasks) || []);\n  }\n\n  getTaskArr = (date, isFinishedSelected, searchText) => {\n    let tasks = this.getDBTasks(date);\n    let resTasks = tasks.map((task, index) => {\n      let myTask = JSON.parse(JSON.stringify(task));\n      myTask.originalIndex = index;\n      return myTask;\n    });\n  \n    if  (isFinishedSelected) {\n      resTasks = resTasks.filter(({ isFinished }) => isFinished);\n    } else {\n      resTasks = resTasks.filter(({ isFinished }) => !isFinished);\n    }\n\n    if  (searchText) {\n      return resTasks.filter(({ task, description }) => task.includes(searchText) || description.includes(searchText));\n    }\n    return resTasks;\n  }\n\n  dateSection = (date, formattedDate, isFinishedSelected, searchText) => {\n      let tasks = this.getTaskArr(date, isFinishedSelected, searchText);\n      if (tasks.length) {\n        return (<h1 class={`is-size-5 ${style.dateHeading} mb-4`}>{formattedDate}</h1>);\n      }\n      return '';\n  }\n\n  markFinished = (e, { date, index, isFinishedSelected, searchText }) => {\n    e.stopPropagation();\n    let tasks = this.getTaskArr(date, isFinishedSelected, searchText);\n    let { originalIndex } = tasks[index];\n    let DBTasks = this.getDBTasks(date);\n    let { localStorage } = window;\n    DBTasks[originalIndex].isFinished = !isFinishedSelected;\n    localStorage.setItem(date, JSON.stringify(DBTasks));\n    let msg = isFinishedSelected ? 'Your Task is marked as Unfinished' : 'Your Task is marked as finished';\n    alert(msg);\n    window.location.reload();\n  }\n\n  deleteTask = (e, { date, index, isFinishedSelected }) => {\n    e.stopPropagation();\n    let tasks = this.getTaskArr(date, isFinishedSelected);\n    let { originalIndex } = tasks[index];\n    let DBTasks = this.getDBTasks(date);\n    delete DBTasks[originalIndex];\n    DBTasks = DBTasks.filter((task) => task);\n    let { localStorage } = window;\n    if (DBTasks.length) {\n      localStorage.setItem(date, JSON.stringify(DBTasks));\n    } else {\n      localStorage.removeItem(date);\n    }\n    alert('Your task is deleted Successfully');\n    window.location.reload();\n  }\n\n  editTask = (e, { date, index, isFinishedSelected, editTask }) => {\n    e.stopPropagation();\n    let tasks = this.getTaskArr(date, isFinishedSelected);\n    let { originalIndex } = tasks[index];\n    editTask({ index: originalIndex, date });\n  }\n\n  getThumbsIcon = ({ index, date, isFinishedSelected, searchText }) => {\n    if (isFinishedSelected) {\n      return (\n        <div class={style.tooltip}>\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" class={style.deleteSvg} stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" onclick={(e) => this.markFinished(e, { index, date, isFinishedSelected, searchText })}>\n            <path d=\"M10 15v4a3 3 0 0 0 3 3l4-9V2H5.72a2 2 0 0 0-2 1.7l-1.38 9a2 2 0 0 0 2 2.3zm7-13h2.67A2.31 2.31 0 0 1 22 4v7a2.31 2.31 0 0 1-2.33 2H17\"/>\n          </svg>\n          <span class={style.tooltiptext}>Mark as Unfinished</span>\n        </div>\n      )\n    }\n    return (\n      <div class={style.tooltip}>\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" class={`${style.finishedSvg}`} stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" onclick={(e) => this.markFinished(e, { index, date, isFinishedSelected, searchText })}>\n          <path d=\"M14 9V5a3 3 0 0 0-3-3l-4 9v11h11.28a2 2 0 0 0 2-1.7l1.38-9a2 2 0 0 0-2-2.3zM7 22H4a2 2 0 0 1-2-2v-7a2 2 0 0 1 2-2h3\"/>\n        </svg>\n        <span class={style.tooltiptext}>Mark as finished</span>\n      </div>\n    )\n  }\n\n  getTasks = (date, isFinishedSelected, searchText, editTask) => {\n    let tasks = this.getTaskArr(date, isFinishedSelected, searchText);\n\n    return tasks.map(({ task, description}, index) => {\n      return(\n        <Fragment>\n          <button class={`${style.accordion} notification is-link is-light columns is-align-items-center m-0 is-size-4`} onclick={this.toggleSlide}>\n            <div class={`column is-four-fifths p-0 ${style.overflowAnyware}`}>{task}</div>\n            <div class=\"column has-text-right p-0\">\n              {this.getThumbsIcon({ index, date, isFinishedSelected, searchText })}\n              <div class={style.tooltip}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"ml-2\" onclick={(e) => this.editTask(e, { index, date, isFinishedSelected, searchText, editTask })}>\n                  <path d=\"M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7\"/>\n                  <path d=\"M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z\"/>\n                </svg>\n                <span class={style.tooltiptext}>Edit</span>\n              </div>\n              <div class={style.tooltip}>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class={`ml-2 ${style.deleteSvg}`} onclick={(e) => this.deleteTask(e, { index, date, isFinishedSelected, searchText })}>\n                  <polyline points=\"3 6 5 6 21 6\"/>\n                  <path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"/>\n                  <line x1=\"10\" y1=\"11\" x2=\"10\" y2=\"17\"/><line x1=\"14\" y1=\"11\" x2=\"14\" y2=\"17\"/>\n                </svg>\n                <span class={style.tooltiptext}>Delete</span>\n              </div>\n            </div>\n          </button>\n          <div class={`${style.panel}`}>{description}</div>\n        </Fragment>\n      )\n    })\n  }\n\n  toggleSlide({ currentTarget }) {\n    currentTarget.classList.toggle(style.active);\n    let { nextElementSibling: panel } = currentTarget;\n    if (panel.style.maxHeight) {\n      panel.style.maxHeight = null;\n    } else {\n      panel.style.maxHeight = `${panel.scrollHeight}px`;\n    }\n  }\n\n  render({ dates, formattedDates, isFinishedSelected, searchText, editTask }) {\n    return (\n      <div style={{width: '74%', margin: '0 auto'}}>\n        {formattedDates.map((date, index) => {\n          return (\n            <div>\n              {this.dateSection(dates[index], date, isFinishedSelected, searchText)}\n              {this.getTasks(dates[index], isFinishedSelected, searchText, editTask)}\n            </div>\n          );\n        })}\n      </div>\n    )\n  }\n}\n\nexport default TaskList;"],"sourceRoot":""}